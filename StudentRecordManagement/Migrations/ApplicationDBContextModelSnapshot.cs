// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentRecordManagement.Data;

#nullable disable

namespace StudentRecordManagement.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.Forms.FormRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("FormRecord", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.People.ParentContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParentContact", (string)null);
                });

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.People.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffGroupMask")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Staff", (string)null);
                });

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.People.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ParentContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentContactId");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.Forms.Detention", b =>
                {
                    b.HasBaseType("StudentRecordManagement.Models.Entities.Forms.FormRecord");

                    b.Property<string>("BreachReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DetentionTime")
                        .HasColumnType("int");

                    b.Property<int>("PredefinedReasons")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.ToTable("DetentionRecord", (string)null);
                });

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.Forms.LatePass", b =>
                {
                    b.HasBaseType("StudentRecordManagement.Models.Entities.Forms.FormRecord");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reason")
                        .HasColumnType("int");

                    b.Property<DateTime>("SignInDateTime")
                        .HasColumnType("datetime2");

                    b.ToTable("LatePassRecord", (string)null);
                });

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.Forms.LeavePass", b =>
                {
                    b.HasBaseType("StudentRecordManagement.Models.Entities.Forms.FormRecord");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reason")
                        .HasColumnType("int");

                    b.Property<DateTime>("SignOutDateTime")
                        .HasColumnType("datetime2");

                    b.ToTable("LeavePassRecord", (string)null);
                });

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.Forms.SickBay", b =>
                {
                    b.HasBaseType("StudentRecordManagement.Models.Entities.Forms.FormRecord");

                    b.Property<Guid?>("MedicalOfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OtherReasons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ParentContacted")
                        .HasColumnType("bit");

                    b.Property<int?>("SickBayOutAction")
                        .HasColumnType("int");

                    b.Property<int>("SickBayReason")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("datetime2");

                    b.Property<string>("Treatment")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("MedicalOfficerId");

                    b.ToTable("SickBayRecord", (string)null);
                });

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.Forms.FormRecord", b =>
                {
                    b.HasOne("StudentRecordManagement.Models.Entities.People.Student", "Student")
                        .WithMany("Records")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.People.Student", b =>
                {
                    b.HasOne("StudentRecordManagement.Models.Entities.People.ParentContact", "ParentContact")
                        .WithMany()
                        .HasForeignKey("ParentContactId");

                    b.Navigation("ParentContact");
                });

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.Forms.Detention", b =>
                {
                    b.HasOne("StudentRecordManagement.Models.Entities.Forms.FormRecord", null)
                        .WithOne()
                        .HasForeignKey("StudentRecordManagement.Models.Entities.Forms.Detention", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.Forms.LatePass", b =>
                {
                    b.HasOne("StudentRecordManagement.Models.Entities.Forms.FormRecord", null)
                        .WithOne()
                        .HasForeignKey("StudentRecordManagement.Models.Entities.Forms.LatePass", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.Forms.LeavePass", b =>
                {
                    b.HasOne("StudentRecordManagement.Models.Entities.Forms.FormRecord", null)
                        .WithOne()
                        .HasForeignKey("StudentRecordManagement.Models.Entities.Forms.LeavePass", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.Forms.SickBay", b =>
                {
                    b.HasOne("StudentRecordManagement.Models.Entities.Forms.FormRecord", null)
                        .WithOne()
                        .HasForeignKey("StudentRecordManagement.Models.Entities.Forms.SickBay", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentRecordManagement.Models.Entities.People.Staff", "MedicalOfficer")
                        .WithMany()
                        .HasForeignKey("MedicalOfficerId");

                    b.Navigation("MedicalOfficer");
                });

            modelBuilder.Entity("StudentRecordManagement.Models.Entities.People.Student", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
